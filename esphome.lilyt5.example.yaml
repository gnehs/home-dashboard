esphome:
  name: lilyt5
  friendly_name: lilyt5
  libraries:
    - SPI
  platformio_options:
    # Unless noted otherwise, based on https://github.com/Xinyuan-LilyGO/LilyGo-EPD47/blob/1eb6119fc31fcff7a6bafecb09f4225313859fc5/examples/demo/platformio.ini#L37
    upload_speed: 921600
    monitor_speed: 115200
    board_build.mcu: esp32s3
    board_build.f_cpu: 240000000L
    board_build.arduino.memory_type: qspi_opi
    board_build.flash_size: 16MB
    board_build.flash_mode: qio
    board_build.flash_type: qspi
    board_build.psram_type: opi
    board_build.memory_type: qspi_opi
    board_build.boot_freq: 80m
    platform_packages:
      - "toolchain-riscv32-esp @8.4.0+2021r2-patch5"
    build_flags:  # the first three defines are required for the screen library to function.
      - "-DBOARD_HAS_PSRAM"
      - "-DARDUINO_RUNNING_CORE=0"  # TODO: this conflicts with the value from platformio's idedata, spewing a lot of warnings during the build.
      - "-DARDUINO_EVENT_RUNNING_CORE=0"  # and this too
      # In addition to lilygo's settings:
      # To enable reading logs over USB until `hardware_uart: USB_CDC` support
      # is added to `logger:`, as detailed in <https://github.com/esphome/feature-requests/issues/1906>:
      - "-DARDUINO_USB_MODE=1"
      - "-DARDUINO_USB_CDC_ON_BOOT=1"

esp32:
  variant: esp32s3
  board: esp32-s3-devkitc-1

  framework:
    type: arduino
    # Just like in <https://community.home-assistant.io/t/enable-usb-cdc-to-log-hello-world-to-esp32-s3-dev-board-for-esphome/463164/10>
    # I had problems with newer versions; the following combination happens to work, so using it for now.
    version: 2.0.3
    platform_version: 5.1.1

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "xxxxxx"

ota:
  - platform: esphome
    password: "xxxxxx"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lilyt5 Fallback Hotspot"
    password: "xxxxxx"

captive_portal:
http_request:
  verify_ssl: false
  timeout: 20s
  watchdog_timeout: 20s

sensor:
  - platform: uptime
    name: "Uptime"
    filters:
      - lambda: return x / 3600;
    unit_of_measurement: "h"
    accuracy_decimals: 1

button:
  - platform: restart
    name: "Restart"

  - platform: template
    name: "Update Image"
    on_press:
      then:
        - script.execute: update_image

online_image:
  - url: "http://xxxxxxx/img/board-1"
    format: jpeg
    type: rgb
    id: my_online_image
    on_download_finished:
      component.update: my_display

script:
  - id: update_image
    mode: queued
    then:
      - component.update: my_online_image

external_components:
  - source: github://nickolay/esphome-lilygo-t547plus
    components: ["t547"]

display:
  - platform: t547
    id: my_display
    update_interval: 3600s
    lambda: |-
      // Draw the image my_online_image at position [x=0,y=0]
      it.image(0, 0, id(my_online_image));
